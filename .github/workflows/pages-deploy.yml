name: "notionToJekyllMd > Build > Deploy"
on:
  repository_dispatch:
    types: [RUN_WORKFLOW_DISPATCH]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  notionToJekyllMd:
    runs-on: ubuntu-latest
    env:
      WORKING_DIR: ./_scripts

    steps:
      - uses: actions/checkout@master

      # 모든 아티클 제거
      - name: Clean Directory
        run: |
          for file in assets/img/*
          do
              if [[ $file != "assets/img/favicons" ]]
              then
                  rm -rf "$file"
              fi
          done
          rm -rf _posts/*

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      # node_modules 캐시 설정
      - name: Cache node_modules
        id: cache
        uses: actions/cache@v3
        with:
          # 작업 폴더로 정의
          working-directory: ${{ env.WORKING_DIR }}
          # cache의 대상을 정한다.
          path: "**/node_modules"
          # 무효화의 기준이 되는 cache의 key를 정한다.
          key: ${{ runner.os }}-${{ env.CACHE_KEY_LABLE }}-${{ hashFiles(format('{0}/package-lock.json')) }}
          # key가 깨졌을때 복구하는 방법 명시, "${{ runner.os }}-node-" 와 일치하는 캐시를 가져와 사용한다.
          restore-keys: ${{ runner.os }}-node-

      # 4. Cache Hit 실패: 일치하는 캐시가 없다면 node_modules 설치
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
        working-directory: ${{ env.WORKING_DIR }}

      - name: Install Dependencies
        run: npm run start
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          DATABASE_ID: ${{ secrets.DATABASE_ID }}
        working-directory: ${{ env.WORKING_DIR }}

      - uses: stefanzweifel/git-auto-commit-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          commit_message: "Feat: Notion to Jekyll 변경 사항 저장"
          branch: main
          commit_user_name: importer-bot 🤖
          commit_user_email: actions@github.com
          commit_author: importer-bot 🤖 <actions@github.com>

  build:
    runs-on: ubuntu-latest
    needs: notionToJekyllMd
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # submodules: true
          # If using the 'assets' git submodule from Chirpy Starter, uncomment above
          # (See: https://github.com/cotes2020/chirpy-starter/tree/main/assets)

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3
          bundler-cache: true

      - name: Build site
        run: bundle exec jekyll b -d "_site${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: "production"

      - name: Test site
        run: |
          bundle exec htmlproofer _site \
            \-\-disable-external \
            \-\-ignore-urls "/^http:\/\/127.0.0.1/,/^http:\/\/0.0.0.0/,/^http:\/\/localhost/"

      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "_site${{ steps.pages.outputs.base_path }}"

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
